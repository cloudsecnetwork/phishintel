name: Startup & Build Check

on:
  push:
    branches: [main]
  # pull_request:
  #   branches: [main]

jobs:
  test-backend:
    name: Backend Startup Check
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:8.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install backend dependencies
        run: npm ci

      - name: Start backend in background
        run: |
          PORT=8080 \
          DB_URL=mongodb://localhost:27017/test \
          ADMIN_PASSWORD=test-admin-password \
          SESSION_SECRET=test-session-secret \
          node app.js &
          sleep 5

      - name: Install wait-on
        run: npm install -g wait-on@8.0.3

      - name: Wait for backend /health route
        run: wait-on http://localhost:8080/health --timeout=30000

  test-frontend:
    name: Frontend Build Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./client
        run: npm ci

      - name: Build frontend
        working-directory: ./client
        run: CI='' npm run build

      - name: Install static server
        run: npm install -g serve

      - name: Serve built frontend
        working-directory: ./client
        run: serve -s build -l 3000 &

      - name: Install wait-on
        run: npm install -g wait-on@8.0.3

      - name: Wait for frontend root page
        run: wait-on http://localhost:3000 --timeout=30000

  security-check:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install backend dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit
